<section id="account">
  <form method="post" action="/customer/account" onsubmit="return validate()" class="account-detail">

    <div class="account-detail-header">
      <div class="van-icon"><i class="icon-SnackVan"></i></div>
      <h1>Profile</h1>
    </div>
    <label for="emailAddress">Email Address</label>
    <input placeholder="email address" name='email' id='email' type="email" value="{{email}}" readonly="readonly" />
    <label for="givenName">Given Name</label>
    <input placeholder="given name" name='givenName' id='givenName' value="" />
    <label for="familyName">Family Name</label>
    <input placeholder="family name" name='familyName' id='familyName' value="" />
    <label for="password">Password</label>
    <input placeholder="***************" name='password' id='password' type="password" value="" />
    <label for="confirmPassword">Confirm Password</label>
    <input placeholder="***************" name='confirmPassword' id='confirmPassword' type="password" value="" />
    <div class="account-detail-submit">
      <button id="update-button" class="button" type="submit">
        <i class="fas fa-edit"></i>
        UPDATE
      </button>
      <button id="logout-button" class="button" type="button" onclick="logout()">
        <i class="fas fa-sign-out-alt"></i>
        LOG OUT
      </button>
    </div>
  </form>
</section>

<script>

  async function logout() {
    const res = await fetch(`/customer/logout/`,
      {
        method: "POST",
      }
    );
    window.location = "/customer/login";
    sessionStorage.clear();
  }

  // check if the sign up meet the requirements
  function validate() {
    //Passwords MUST be hashedbefore storing them in the database.
    const password = document.getElementById("password").value;
    const confirmPassword = document.getElementById("confirmPassword").value;
    if (confirmPassword !== password) {
      alert("Passwords do not match.");
      return false;
    }
    if (!passwordPolicy(password)) {
      alert("Invalid password\n\n" +
        "1. At least one alphabet character (upper or lower caseA-Z)\n" +
        "2. At least one numerical digit (0-9)\n" +
        "3. A length of at least 8 characters");
      return false;
    }
  }

  // checks the following:
  // 1. At least one alphabet character (upper or lower case A-Z)
  // 2. At least one numerical digit (0-9)
  // 3. A length of at least 8 characters
  function passwordPolicy(password) {
    const regexNum = /\d/;
    const regexChar = /[a-zA-Z]/;

    const hasAlphabet = regexChar.test(password);
    const hasNum = regexNum.test(password);
    const length = password.length;
    let validLen;
    if (length >= 8) {
      validLen = 1;
    }
    else {
      validLen = 0;
    }

    if ((hasAlphabet == 1) && (hasNum == 1) && (validLen == 1)) {
      return true;
    }
    else {
      return false;
    }
  }
</script>