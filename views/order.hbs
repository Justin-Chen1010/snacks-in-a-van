<section id="order">
  <div class="order-wrapper">
    <div class="order-header">
      <i class="icon-SnackVan"></i>
      <h1>Order Details</h1>
    </div>
    <div>
      <div>
        <i class="fas fa-shuttle-van"></i>
        <span class="cart-van-name">Van name</span>
      </div>
      <div>
        <i class="fas fa-map-marker-alt"></i>
        <span class="cart-van-location">Van location</span>
      </div>
    </div>
    {{> cart-table order=order}}
    <div class="order-buttons">
      <button id="cancel-order-button" class="button" onclick="cancelOrder('{{order.orderId}}')">
        <i class="fas fa-trash-alt"></i>
        Cancel Order
      </button>
      <button id="update-order-button" class="button" onclick="updateOrder('{{order.orderId}}')">
        <i class="fas fa-edit"></i>
        Update Order
      </button>
      <button id="add-item-button" class="button" onclick="goToMenu('{{order.orderId}}')" type="button">
        <i class="fas fa-clipboard=list"></i> Add items from menu
      </button>
    </div>
  </div>
</section>

<script>

  // redirect to menu to add items to this current order
  function goToMenu(orderId) {
    window.location = `/customer/menu?orderId=${orderId}`;
  }

  const vendor = JSON.parse(sessionStorage.getItem('vendor'));
  if (vendor) {
    document.querySelector('.cart-van-name').textContent = vendor.vendorName;
    document.querySelector('.cart-van-location').textContent = vendor.address;
  }

  // update the table view based on the current cart items, and modifies the
  // order in the database
  async function updateOrder(orderId) {
    window.location.reload();
    const cart = JSON.parse(sessionStorage.getItem("cart"));
    const order = {{{ json order }}}
    order.items = cart;
    fetch(`/customer/orders/${orderId}`, {
      method: "PUT",
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(order)
    });
  }

  // sets the status of the order in the database as "cancelled", they will
  // not be displayed on the orders page
  async function cancelOrder(orderId) {
    const order = {{{ json order }}}
    order.items = {{{ json (orderToCart order) }}};
    order.status = "cancelled";
    fetch(`/customer/orders/${orderId}`, {
      method: "PUT",
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(order)
    }).then(() => window.location.href = `/customer/orders`);
  }
</script>

<section id="cart">
  <span id="mins_change"></span>
  <span id="secs_change"></span>
  <meter id="discount-cd" min="0" max="100" low="33" high="66" value="0"></meter>
  <h2 id="end_change"></h2>
  <span id="mins"></span>
  <span id="secs"></span>
  <meter id="order-fixed-cd" min="0" max="100" low="33" high="66" value="0"></meter>
  <h2 id="end"></h2>
</section>

<script>

  const order = {{{ json order }}}
  // The data/time we want to countdown to
  //var countDownDate = new Date("Jul 25, 2021 16:37:52").getTime();

  // Run myfunc every second
  //var myfunc = setInterval(function() {

  //var now = new Date().getTime();
  //var timeleft = countDownDate - now;

  // The data/time we want to countdown to
  //var countDownDate = new Date("Jul 25, 2021 16:37:52").getTime();

  function addMinutes(date, minutes) {
    var discount_time = (date + minutes * 60000);
    return discount_time;
  }
  // Progress bar for the timer
  var discount_pb = document.getElementById("discount-cd");
  var order_fixed_pb = document.getElementById("order-fixed-cd");
  var discount_timer = 0;
  var reorder_timer = 0;
  var initial_discount_timer = 0;
  var time_order = new Date(order.timeOrdered).getTime();

  if (discount_timer == 0) {
    discount_timer = addMinutes(new Date(order.timeOrdered).getTime(), 15);
    //This should work? but it should pull from time-ordered not the current itme

    //var discount_timer = now + (15*60000);
    //Convert 15 minutes to milliseconds
  }
  if (reorder_timer == 0){
    reorder_timer = addMinutes(new Date(order.timeOrdered).getTime(), 10);
  }

  if (initial_discount_timer ==0){
    initial_discount_timer = discount_timer;
  }

  // Run myfunc every second
  var myfunc = setInterval(function () {
    
    // Instead of now it should pull from time-ordered
    var now = new Date().getTime();
    var timeleft = discount_timer - now;
    //var timeleft = countDownDate - now;
    var timeleft_change = reorder_timer - now;

    // Update progress bar
    //discount_pb.setAttribute("value", 100 - Math.floor((timeleft % (1000 * 60)) / 1000));
    discount_pb.setAttribute("value", 100*(1- timeleft_change/(10*60000)));
    //order_fixed_pb.setAttribute("value", 100 - 100 * Math.floor((timeleft_change / reorder_timer ))); 
    order_fixed_pb.setAttribute("value", 100*(1- timeleft/(15*60000)));
    //console.log(((Math.floor((timeleft % (1000 * 60)) / 1000))/(Math.floor((discount_timer % (1000 * 60)) / 1000)))); Not sure what is happening
    
    // Calculating the days, hours, minutes and seconds left
   // var days = Math.floor(timeleft / (1000 * 60 * 60 * 24));
   // var hours = Math.floor((timeleft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    var minutes = Math.floor((timeleft % (1000 * 60 * 60)) / (1000 * 60));
    var seconds = Math.floor((timeleft % (1000 * 60)) / 1000);

    var minutes_change = Math.floor((timeleft_change % (1000 * 60 * 60)) / (1000 * 60));
    var seconds_change = Math.floor((timeleft_change % (1000 * 60)) / 1000);
    // Result is output to the specific element
    //document.getElementById("days").innerHTML = days + "d "
    //document.getElementById("hours").innerHTML = hours + "h "
    document.getElementById("mins_change").innerHTML = "Order lock in: " + minutes_change + "m "
    document.getElementById("secs_change").innerHTML = seconds_change + "s "

    document.getElementById("mins").innerHTML = "Discount apply in: " + minutes + "m "
    document.getElementById("secs").innerHTML = seconds + "s "
    
    

    // Display the message when countdown is over

    if (timeleft_change < 0) {
      //clearInterval(myfunc);
      //document.getElementById("days").innerHTML = ""
      //document.getElementById("hours").innerHTML = ""
      document.getElementById("mins_change").innerHTML = ""
      document.getElementById("secs_change").innerHTML = ""
      document.getElementById("end_change").innerHTML = "Order Locked in!";
    }


    if (timeleft < 0) {
      clearInterval(myfunc);
      //document.getElementById("days").innerHTML = ""
      //document.getElementById("hours").innerHTML = ""
      document.getElementById("mins").innerHTML = ""
      document.getElementById("secs").innerHTML = ""
      document.getElementById("end").innerHTML = "15% Discount Applied!!";
    }

    

  }, 1000);


</script>