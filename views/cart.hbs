<section id="cart">
    <div class="cart-wrapper">
        <h1>Order Details</h1>
        <div class="cart-van-details">
            Van Name <br>
            Van Location
        </div>
        <div class="cart-table-wrapper">
        <table class="cart-table">
        </table>
        </div>
        <div class="order-buttons">
            <button id="cancel-order-button" class="button" onclick="clearCart()">
                <i class="fa fa-concierge-bell"></i>
                Cancel Order
            </button>
            <button id="place-order-button" class="button" onclick="debugCart()">
                Place Order
            </button>
        </div>
    </div>
    <a class="button view-menu-button" href="/customer/menu"><i class="fa fa-shopping-cart"></i> View menu</a>
</section>

<script>
    // TODO: don't forget to wipe cart when user logs out

    const menu = JSON.parse(sessionStorage.getItem("menu"));
    const cart = JSON.parse(sessionStorage.getItem("cart"));

    let tableContents = [];
    for (let snackId in cart) {
        const snack = menu.find(item => item.snackId === snackId);
        if (!snack) {
            delete cart[snackId];
            sessionStorage.setItem("cart", JSON.stringify(cart));
        }
        const quantity = cart[snackId];
        tableContents.push({
            "Snack ID": snack.snackId,
            Item: snack.snackName,
            Quantity: quantity,
            "Unit Price": `$${snack.price}`,
            Price: `$${snack.price * quantity}`
        });
    }

    function updateQuantity(snackId) {
        const quantityField = document.getElementById(`snack-${snackId}-quantity`);
        cart[snackId] = parseInt(quantityField.value);
        sessionStorage.setItem("cart", JSON.stringify(cart));
    }

    function updateCartTotal() {
        let cartTotalField = document.querySelector(".cart-total");
        let sum = 0;
        console.log(tableContents);
        for (const row of tableContents) {
            sum += parseFloat(row["Price"].substring(1));
        }
        cartTotalField.textContent = `$${sum}`;
    }

    function generateTableHead(table, data) {
        let thead = table.createTHead();
        let row = thead.insertRow();
        for (let key of data) {
            let th = document.createElement("th");
            let text = document.createTextNode(key);
            th.appendChild(text);
            row.appendChild(th);
        }
    }

    function generateTable(table, data) {
        for (let datum of data) {
            let row = table.insertRow();
            generateRow(row, datum);
        }
        generateLastRow(table);
    }

    function generateRow(row, datum) {
        for (key in datum) {
            let cell = row.insertCell();
            if (key === "Quantity") {
                let input = document.createElement("input");
                input.id = `snack-${datum["Snack ID"]}-quantity`;
                input.className = `count-input`;
                input.setAttribute("type", "number");
                input.setAttribute("min", "1");
                input.setAttribute("onchange", `updateQuantity(${datum["Snack ID"]})`);
                input.setAttribute("value", datum.Quantity);
                cell.appendChild(input);
            } else {
                let text = document.createTextNode(datum[key]);
                cell.appendChild(text);
            }
        }
    }

    function generateLastRow(table) {
        let row = table.insertRow();
        let cell = row.insertCell();
        let text = document.createTextNode("Cart Total");
        cell.appendChild(text);

        row.insertCell();
        row.insertCell();
        row.insertCell();

        let cell2 = row.insertCell();
        cell2.className = "cart-total";
        let text2 = document.createTextNode("0");
        cell2.appendChild(text2);
    }

    function clearCart() {
        sessionStorage.clear();
        window.location.reload();
    }

    // if cart is empty display message
    if (!cart || Object.keys(cart).length === 0) {
        let wrapper = document.querySelector(".cart-table-wrapper");
        let div = document.createElement("div");
        div.className = "empty-cart-message";
        let text = document.createTextNode("Empty cart.");
        div.appendChild(text);
        wrapper.appendChild(div);
    } else {
        let table = document.querySelector(".cart-table");
        let data = Object.keys(tableContents[0]);
        generateTable(table, tableContents);
        generateTableHead(table, data);

        updateCartTotal();
    }
</script>
