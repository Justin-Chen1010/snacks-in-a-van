<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Snacks in a Van</title>
  <link rel="icon" href="/static/iconVendor.png" type="image/png" />
  <link rel="shortcut icon" href="/static/iconVendor.png" type="image/png" />
  <link rel="stylesheet" href="/vendorcss/styles.css">
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.3/css/all.css">
</head>

<style>
body {
  background-color: lightgrey;
}
</style>

<body>

  <header class="navbar">
    <h1 class="navbar-logo">
      <i class="icon-SnackVan"></i>
      <a href="/vendor">Snacks in a Van</a>
    </h1>
    <nav class="navbar-links">
      <a href="/vendor/orders">Orders</a>
      <a href="/vendor/account">Account</a>
      <div class="van-button-wrapper">
      </div>
    </nav>
  </header>
  <main>
    {{{body}}}
  </main>
  <footer>
    <div class="small-screen-navbar">
      <nav class="small-screen-navbar-logo">
          <a href="/vendor"><i class="fas fa-home"></i></a>
          <a href="/vendor/orders"><i class="fas fa-history"></i></a>
          <a href="/vendor/account"><i class="fas fa-user-cog"></i></a>
          <div class="van-button-wrapper">
          </div>
      </nav>
    </div>
    <div class="copyright"></div>
    <p><span>&#169;</span>Snacks in a Van 2021</p>
  </footer>
</body>

</html>

<script>

  // set the status of current vendor (user) to open
  function openVan() {
    if (window.confirm('Please update your location before opening to customers!')) {
      window.location = "/vendor/location";
    }
     updateVanButton();
  }

  // get the status of current vendor (user)
  async function getVan() {
    try {
      const res = await fetch("/vendor/status");
      return res.json();
    } catch {
      return {open: false};
    }
  }

  // set the status of current vendor (user) to close
  async function closeVan() {
    await fetch(`/vendor/status`,
      {
        method: "PUT",
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          open: false,
          lat: null,
          lon: null,
          address: null
        })
      }
    );
    updateVanButton();
  }

  // renders a disabled gray "Open" button that loads before the van status
  // is fetched from the server
  function defaultButton() {
    const wrappers = document.getElementsByClassName("van-button-wrapper");
    for (const wrapper of wrappers) {
      const button = document.createElement("button");
      button.setAttribute("class", "button");
      const buttonText = document.createTextNode("Open");
      button.appendChild(buttonText);
      button.style.backgroundColor = "grey";
      wrapper.replaceChild(button, wrapper.childNodes[0]);
    }
  }

  // renders a button either to close or open, if the logged in vendor is 
  // currently open or closed, respectively.
  function updateVanButton() {
    const wrappers = document.getElementsByClassName("van-button-wrapper");
    for (const wrapper of wrappers) {
      const button = document.createElement("button");
      button.setAttribute("class", "button");

      getVan().then((vendor) => {
        if (vendor.open) {
          const buttonText = document.createTextNode("Close");
          button.appendChild(buttonText);
          button.style.backgroundColor = "red";
          button.addEventListener("click", () => closeVan());
        } else {
          const buttonText = document.createTextNode("Open");
          button.appendChild(buttonText);
          button.style.backgroundColor = "green";
          button.addEventListener("click", () => openVan()); 
        }
        wrapper.replaceChild(button, wrapper.childNodes[0]);
      }).catch((err) => { 
        // do nothing
      });
    }
  }

  defaultButton();
  updateVanButton();
</script>
